{"version":3,"sources":["logo.svg","components/Author.js","components/Books.js","components/BookForm.js","components/BooksItems.js","components/BooksAuthor.js","components/Auth.js","components/NotFound404.js","App.js","reportWebVitals.js","index.js"],"names":["AuthorItem","author","className","to","id","first_name","last_name","birthday_year","AuthorList","authors","map","BooksItem","book","deleteBook","name","authorId","find","onClick","type","BooksList","books","BookForm","props","state","event","this","setState","target","value","selectedOptions","i","length","push","item","createBook","preventDefault","onSubmit","handleSubmit","htmlFor","onChange","handleChange","multiple","handleAuthorChange","React","Component","BooksListAuthor","useParams","console","log","books_filter","filter","includes","parseInt","LoginForm","proms","login","password","get_token","placeholder","NotFound404","location","pathname","App","headers","get_headers","data","axios","post","then","response","load_data","catch","error","delete","get","token","set_token","Cookies","set","username","alert","is_auth","get_token_from_storage","logout","exact","path","component","Author","Books","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2abd679e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\n\nconst AuthorItem = ({author}) =>{\n    return (\n        <tr>\n            <td  className={'col'}>\n               <Link to={`author/${author.id}`}> {author.first_name} </Link>\n            </td >\n            <td  className={'col'}>\n                {author.last_name}\n            </td>\n            <td  className={'col'}>\n                {author.birthday_year}\n            </td>\n        </tr>\n    )\n}\n\n\nconst  AuthorList = ({authors}) =>{\n    return (\n        <table className={'container'}>\n            <th className=\"col\">\n                First name\n            </th >\n\n            <th className=\"col\">\n                Last name\n            </th>\n\n            <th className=\"col\">\n                Birthday year\n            </th>\n            {authors.map((author)=> <AuthorItem author={author}/>)}\n        </table>\n    )\n\n}\n\nexport default AuthorList;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n//\n\n\nconst BooksItem = ({book, authors, deleteBook}) => {\n    return (\n        <tr>\n            <td className={'col'}>\n                {book.id}\n            </td>\n            <td className={'col'}>\n                {book.name}\n            </td>\n            <td className={'col'}>\n\n                {book.author.map((authorId) => {\n                    let author = authors.find((author) => author.id == authorId)\n                    if (author) {\n                        return author.last_name\n                    }\n                })}\n            </td>\n            <td>\n                <button onClick={() => deleteBook(book.id)} type='button'>Delete</button>\n            </td>\n        </tr>\n    )\n}\n\n\nconst BooksList = ({books, authors, deleteBook}) => {\n    return (\n        <div>\n            <table className={'container'}>\n                <th className=\"col\">\n                    Id\n                </th>\n\n                <th className=\"col\">\n                    Name\n                </th>\n\n                <th className=\"col\">\n                    Author\n                </th>\n                <th className=\"col\">\n                    Delete\n                </th>\n                {books.map((book) => <BooksItem book={book} authors={authors} deleteBook={deleteBook}/>)}\n            </table>\n\n            <Link to='/books/create'>Create</Link>\n        </div>\n    )\n\n}\n\nexport default BooksList;","import React from \"react\";\n\nclass BookForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            author: []}\n            // props.authors[0].id}\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            }\n        )\n    }\n\n    handleAuthorChange(event) {\n        if (!event.target.selectedOptions) {\n\n            this.setState({\n                'author': []\n            })\n            return;\n        }\n        let authors = []\n        for(let i=0; i<event.target.selectedOptions.length; i++){\n            authors.push(event.target.selectedOptions.item(i).value)\n        }\n        this.setState({\n            'author':authors\n        })\n    }\n\n\n\n\n    handleSubmit(event) {\n        // console.log(this.state.name + ' ' + this.state.author)\n        this.props.createBook(this.state.name, this.state.author)\n\n        event.preventDefault()\n    }\n\n    render() {\n        return (\n            <form onSubmit={(event) => this.handleSubmit(event)}>\n\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"login\">name</label>\n                    <input type=\"text\" name=\"name\" value={this.state.name}\n                           onChange={(event) => this.handleChange(event)}/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"author\">author</label>\n\n                    <select name=\"author\" multiple onChange={(event) => this.handleAuthorChange(event)}>\n                        {this.props.authors.map((item) => <option value={item.id}>{item.first_name}</option>)}\n                    </select>\n\n\n                    {/*<input type=\"number\" name=\"author\" value={this.state.author}*/}\n                    {/*       onChange={(event) => this.handleChange(event)}/>*/}\n\n\n                </div>\n                {/*<input type=\"submit\" className=\"btn btn-primary\" value=\"Save\"/>*/}\n\n\n                <input type=\"submit\" value=\"Save\"/>\n            </form>\n        );\n\n    }\n\n\n}\n\nexport default BookForm","\nconst BooksItem = ({book,authors}) =>{\n    return (\n        <tr>\n            <td  className={'col'}>\n                {book.id}\n            </td >\n            <td  className={'col'}>\n                {book.name}\n            </td >\n            <td  className={'col'}>\n\n                {book.author.map((authorId) => {\n                    let author = authors.find((author) => author.id == authorId )\n                    if(author){\n                        return author.last_name\n                    }\n                })}\n            </td>\n        </tr>\n    )\n}\n\nexport default BooksItem;","import BooksItem from \"./BooksItems\";\nimport {useParams} from \"react-router-dom\";\nconst  BooksListAuthor = ({books,authors}) =>{\n\n    let {id} = useParams();\n    console.log({id})\n\n    let books_filter = books.filter((book => book.author.includes(parseInt(id))))\n     console.log(books_filter)\n    return (\n        <table className={'container'}>\n            <th className=\"col\">\n                Id\n            </th >\n\n            <th className=\"col\">\n                Name\n            </th>\n\n            <th className=\"col\">\n               Author\n            </th>\n            {books_filter.map((book)=> <BooksItem book={book} authors={authors}/>)}\n        </table>\n    )\n\n}\n\nexport default BooksListAuthor;","import React from \"react\";\n\nclass LoginForm extends React.Component {\n    constructor(proms) {\n        super(proms);\n        this.state = {login: '', password: ''}\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            }\n\n        )\n          console.log([event.target.name], event.target.value)\n    }\n\n    handleSubmit(event) {\n        // console.log(this.state.login + ' ' + this.state.password)\n        this.props.get_token(this.state.login,this.state.password)\n        event.preventDefault()\n    }\n\n    render() {\n        return (\n            <form onSubmit={(event) => this.handleSubmit(event)}>\n                <input type=\"text\" name=\"login\" placeholder=\"login\" value={this.state.login}\n                       onChange={(event) => this.handleChange(event)}/>\n                <input type=\"password\" name=\"password\" placeholder=\"password\" value={this.state.password}\n                       onChange={(event) => this.handleChange(event)}/>\n                <input type=\"submit\" value=\"Login\"/>\n            </form>\n        );\n\n    }\n\n\n}\nexport  default  LoginForm","const NotFound404 = ({location}) => {\n\n    return (\n        <div>\n            <h2> Страница по адресу '{location.pathname}' не найдена</h2>\n        </div>\n    )\n\n\n}\nexport default NotFound404;","import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport React from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport logo from './logo.svg';\nimport './App.css';\nimport AuthorList from './components/Author.js'\nimport BooksList from './components/Books.js'\nimport BookForm from './components/BookForm.js'\nimport BooksListAuthor from './components/BooksAuthor.js'\nimport LoginForm from \"./components/Auth\";\nimport NotFound404 from \"./components/NotFound404\";\nimport {HashRouter, Route, BrowserRouter, Link, Switch, Redirect} from \"react-router-dom\";\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            'authors': [],\n            'books': [],\n            'token': ''\n        }\n    }\n\n\n    createBook(name, author) {\n        console.log(name + \" \" + author)\n        const headers = this.get_headers()\n        const data = {name: name, author: author}\n        axios.post(`http://127.0.0.1:8000/api/book/`, data,{headers})\n            .then(response => {\n                this.load_data()\n            }).catch(error => {\n                console.log(error)\n                this.setState({authors: []})\n            }\n        )\n\n    }\n\n    deleteBook(id) {\n        const headers = this.get_headers()\n        axios.delete(`http://127.0.0.1:8000/api/book/${id}`, {headers})\n            .then(response => {\n                //\n                // this.setState(\n                //     {\n                //         'books': this.state.books.filter((item) => item.id !== id)\n                //     }\n                // )\n                this.load_data()\n            }).catch(error => {\n                console.log(error)\n                this.setState({authors: []})\n            }\n        )\n\n    }\n\n\n    load_data() {\n        const headers = this.get_headers()\n        axios.get('http://127.0.0.1:8000/api/authors/', {headers})\n            .then(response => {\n                const authors = response.data\n\n                this.setState(\n                    {\n                        'authors': authors\n                    }\n                )\n            }).catch(error => {\n                console.log(error)\n                this.setState({authors: []})\n            }\n        )\n\n        axios.get('http://127.0.0.1:8000/api/book/', {headers})\n            .then(response => {\n                const books = response.data\n\n                this.setState(\n                    {\n                        'books': books\n                    }\n                )\n            }).catch(error => {\n                console.log(error)\n                this.setState({books: []})\n            }\n        )\n    }\n\n\n    is_auth() {\n        // return this.state.token != ''\n        return !!this.state.token\n    }\n\n    logout() {\n        this.set_token('')\n    }\n\n    set_token(token) {\n        const cookies = new Cookies()\n        cookies.set('token', token)\n        this.setState({'token': token}, () => this.load_data())\n    }\n\n    get_token(username, password) {\n        axios.post('http://127.0.0.1:8000/api-token-auth/', {username: username, password: password})\n            .then(response => {\n                this.set_token(response.data['token'])\n            }).catch(error => alert('Неверный логин или пароль'))\n    }\n\n    get_headers() {\n        let headers = {\n            // 'Accept':'application/json; version=v2',\n            'Content-Type': 'application/json'\n        }\n        if (this.is_auth()) {\n            headers['Authorization'] = 'Token ' + this.state.token\n        }\n        return headers\n    }\n\n\n    get_token_from_storage() {\n        const cookies = new Cookies()\n        const token = cookies.get('token')\n        this.setState({'token': token}, () => this.load_data())\n\n\n    }\n\n    componentDidMount() {\n        this.get_token_from_storage()\n    }\n\n    render() {\n        return (\n            <div>\n                <HashRouter>\n                    <nav>\n                        <ul>\n                            <li>\n                                <Link to='/'>Authors</Link>\n                            </li>\n                            <li>\n                                <Link to='/books'>Books</Link>\n                            </li>\n                            <li>\n                                {this.is_auth() ? <button onClick={() => this.logout()}> Logout</button> :\n                                    <Link to='/login'>Login</Link>}\n                            </li>\n                        </ul>\n                    </nav>\n                    <Switch>\n                        <Route exact path='/' component={() => <AuthorList authors={this.state.authors}/>}/>\n                        <Route exact path='/books'\n                               component={() => <BooksList books={this.state.books} authors={this.state.authors}\n                                                           deleteBook={(id) => this.deleteBook(id)}/>}/>\n\n                        <Route exact path='/books/create'\n                               component={() => <BookForm authors={this.state.authors} createBook={(name,author) => this.createBook(name,author)}/>}/>\n\n                        <Route exact path='/login' component={() => <LoginForm\n                            get_token={(username, password) => this.get_token(username, password)}/>}/>\n\n\n                        <Route path='/author/:id'>\n                            <BooksListAuthor books={this.state.books} authors={this.state.authors}/>\n                        </Route>\n                        <Redirect from='/authors' to='/'/>\n                        <Route component={NotFound404}/>\n                    </Switch>\n                </HashRouter>\n            </div>\n\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}